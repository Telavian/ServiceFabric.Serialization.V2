using System.Globalization;

namespace ServiceFabric.Serialization.V2.Extensions
{
    /// <summary>
    /// Computes CRC64 for a given byte payload.
    /// </summary>
    public static class CRC64
    {
        private static readonly ulong[] _crc64Table = new ulong[]
            {
                0L, 4823603603198064275L, 9647207206396128550L, 14344283933443513269L, 5274672035359026399L, 847670339082705484L, 14759040976900489721L,
                10241823793177474922L, 10549344070718052798L, 15030250704074698541L, 1695340678165410968L, 6158653484774949387L, 15804726273676621153L,
                11071337880091427826L, 6824194888265062471L, 2036903512645398228L, 7367177604490692079L, 2651944067726553980L, 16419204125234161865L,
                11613757334439845466L, 3390681356330821936L, 7926053118503640995L, 12317306969549898774L, 16726154088988619397L, 17607865585094646865L,
                13162708473643690690L, 8194994013375312247L, 3695931686473304036L, 13648389776530124942L, 18417527692557321757L, 4073807025290796456L,
                8825348881154370363L, 14734355208981384158L, 10271039580541631821L, 5303888135453107960L, 822984195088142443L, 9604374506261047041L,
                14391664176758772114L, 47380625301539367L, 4780770595170139316L, 6781362712661643872L, 2084283301222999283L, 15852106237007281990L, 11028505464239851989L,
                1670654249350217407L, 6187869865390245932L, 10578560694269006745L, 15005564104267687178L, 12269926345859042865L, 16768987096479742114L,
                3433514057002836759L, 7878672873577829764L, 16389988026750624494L, 11638443477897467005L, 7391863372946608072L, 2622728278751721819L,
                4044590402276644751L, 8850035479350698268L, 13673076206955870889L, 18388311311405091898L, 8147614050581592912L, 3738764100714335683L,
                17650697762308740726L, 13115328684529279205L, 15709965168302367023L, 11021966344253216700L, 6909860770376862729L, 2095335087373712026L,
                10607776270906215920L, 15115916238825782115L, 1645968390176284886L, 6063892853452478021L, 5216239979862816913L, 762004938812542466L,
                14808413130408695223L, 10336584279807992612L, 94761250603078734L, 4872975272980325085L, 9561541190340278632L, 14285852213486374907L,
                13562725425323287744L, 18359094313119879763L, 4168566602445998566L, 8874722219015798645L, 17657238303940757535L, 13257468400305012364L,
                8136561383943382329L, 3610266854770152362L, 3341308498700434814L, 7831293060043656173L, 12375739730780491864L, 16811819059476047563L,
                7452841817450123681L, 2710377314828461874L, 16324444680414493831L, 11564384134825822740L, 1621282580641819377L, 6093108618008534114L,
                10636992411005044695L, 15091230119249932612L, 6867028114005673518L, 2142715359940571325L, 15757345747155659528L, 10979133309658045851L,
                9518708972583580495L, 14333231979791697372L, 142141253402664553L, 4830142882085382394L, 14783726745893216144L, 10365800689136969987L,
                5245456557503443638L, 737318311902463013L, 8089180804553289502L, 3653099890976004493L, 17700070958701396536L, 13210088128275084459L, 4139350461810230209L,
                8899408340202190162L, 13587411233247080167L, 18329878549100632180L, 16295228101163185824L, 11589070762272702515L, 7477528201428671366L,
                2681160907110034709L, 12328359726370364031L, 16854651450907929836L, 3384140715920324441L, 7783913295349006794L, 17796789492404876493L,
                12973186262895182430L, 8294265019745835499L, 3597188614796881784L, 13819721540753725458L, 18246723593521770113L, 4190670174747424052L,
                8707887697765516199L, 7249714899603402099L, 2768808468102880224L, 16248400991498780757L, 11785088403942012614L, 3291936780352569772L,
                8025325358597240639L, 12127785706904956042L, 16915077318774037017L, 10432479959725633826L, 15147713122803500977L, 1524009877625084932L,
                6329456346323069591L, 15705454305770282493L, 11170082187107838830L, 6635271944638132443L, 2226424485906433608L, 189522501206157468L, 4634679410803088911L,
                9745950545960650170L, 14245012653811987241L, 5445476407655580739L, 676338306971005648L, 14876502445374089573L, 10124960353263198198L,
                4215391513593610003L, 8678706776937023872L, 13790540925671641653L, 18271444552530207910L, 8337133204891997132L, 3549843186494580063L,
                17749444438031597290L, 13016054137459951737L, 12170653315997410989L, 16867732534171963454L, 3244592164593781643L, 8068192726900473112L,
                16273122767886764658L, 11755906975779290337L, 7220533709540304724L, 2793530071884239303L, 6682616997400869628L, 2183556611878603887L,
                15662586120087312346L, 11217427617020813641L, 1553190491096487459L, 6304735387851432112L, 10407758620342516485L, 15176894045242543510L,
                14905683634900247362L, 10100238751092381137L, 5420754629656923748L, 705519735670536439L, 9793295161182637981L, 14202145287119436046L, 146654890503152315L,
                4682024195942093864L, 3242565161283638754L, 7930564333232481137L, 12186217236017068228L, 17000743249723264599L, 7335380351123765565L,
                2827240748300537774L, 16153640314560107547L, 11735716164790313608L, 13734056228011347036L, 18188291445129067215L, 4285430719881142650L,
                8757259798139230185L, 17846161249714921603L, 13067947420601767440L, 8235833358291897765L, 3511522545606540086L, 5387043107155988493L, 590673871457609374L,
                14925875833148783915L, 10219719885873843128L, 284282506805329106L, 4684052045342640705L, 9660285764170764788L, 14186579979835500391L,
                15610694155489642931L, 11120709418076880672L, 6720936860919424149L, 2284857304564388358L, 10490913115006887276L, 15233377424362361855L,
                1474636623804926026L, 6234696958930763481L, 16178361609106579004L, 11706535215248140463L, 7306199781952008986L, 2851961734412043657L,
                12229085463316509411L, 16953397843693241456L, 3195220067441434565L, 7973432182840617302L, 8278700923620460418L, 3464177731752866065L,
                17798816680404380324L, 13110814815472245815L, 4310152537884486493L, 8728078392784608718L, 13704874997943502459L, 18213013024491712744L,
                9707630858549910483L, 14143712128616820032L, 241414281116563189L, 4731397450835853414L, 14955056402857342732L, 10194998898151653791L,
                5362321814220069418L, 619854820462849209L, 1503817855483314797L, 6209975379031176446L, 10466191297540353867L, 15262558828106308056L, 6768281431840648882L,
                2241989909157107745L, 15567826590698013588L, 11168054230320002311L
            };

        /// <summary>
        /// Returns the CRC64 for the given payload.
        /// </summary>
        /// <param name="value">Byte payload.</param>
        /// <returns>CRC64 value.</returns>
        public static ulong ToCRC64(byte[] value)
        {
            var crc64Table = unchecked((ulong)-1);
            for (var i = 0; i < value.Length; i++)
            {
                var num = ((uint)(crc64Table >> 56) ^ value[i]) & 255;
                crc64Table = _crc64Table[num] ^ (crc64Table << 8);
            }

            return unchecked(crc64Table ^ (ulong)-1);
        }

        /// <summary>
        /// Returns the CRC64 for the given payload.
        /// </summary>
        /// <param name="values">Byte payloads.</param>
        /// <returns>CRC64 value.</returns>
        public static ulong ToCRC64(params byte[][] values)
        {
            var crc64Table = unchecked((ulong)-1);
            for (var i = 0; i < values.Length; i++)
            {
                for (var j = 0; j < values[i].Length; j++)
                {
                    var num = ((uint)(crc64Table >> 56) ^ values[i][j]) & 255;
                    crc64Table = _crc64Table[num] ^ (crc64Table << 8);
                }
            }
            return unchecked(crc64Table ^ (ulong)-1);
        }

        /// <summary>
        /// Returns the CRC64 in string form for the given payload.
        /// </summary>
        /// <param name="value">Byte payload.</param>
        /// <returns>CRC64 value.</returns>
        public static string ToCrc64String(byte[] value)
        {
            var cRC64 = ToCRC64(value);
            return cRC64.ToString("X", CultureInfo.InvariantCulture);
        }
    }
}